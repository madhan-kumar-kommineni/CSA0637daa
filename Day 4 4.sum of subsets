#include <stdio.h>
#include <stdbool.h>
#define MAX_SIZE 100

int set[MAX_SIZE];
bool include[MAX_SIZE];
int n;
int targetSum;
void sumOfSubsets(int sum, int k, int remaining) {
    include[k] = true;

    if (sum + set[k] == targetSum) {
        printf("{ ");
        for (int i = 0; i <= k; i++) {
            if (include[i])
                printf("%d ", set[i]);
        }
        printf("}\n");
    } else if (sum + set[k] + set[k+1] <= targetSum) {
        sumOfSubsets(sum + set[k], k+1, remaining - set[k]);
    }

    if ((sum + remaining - set[k] >= targetSum) && (sum + set[k+1] <= targetSum)) {
        include[k] = false;
        sumOfSubsets(sum, k+1, remaining - set[k]);
    }
}
void findSubsets() {
    int totalSum = 0;
    for (int i = 0; i < n; i++)
        totalSum += set[i];

    if (totalSum < targetSum) {
        printf("No subset exists\n");
        return;
    }

    printf("Subsets that sum up to %d are:\n", targetSum);
    sumOfSubsets(0, 0, totalSum);
}
int main() {
    printf("Enter the number of elements in the set: ");
    scanf("%d", &n);

    printf("Enter the elements of the set:\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &set[i]);

    printf("Enter the target sum: ");
    scanf("%d", &targetSum);
    findSubsets();
    return 0;
}
